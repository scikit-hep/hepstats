name: CI

on:
  pull_request:
  push:
    branches: [ "master"]
  release:
    types:
      - "published"

jobs:
  cancel:
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
        with:
          all_but_latest: true
          access_token: ${{ github.token }}

  pre-commit:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4

  checks:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        include:
          - os: windows-latest
            python-version: "3.7"
          - os: windows-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.7"
          - os: macos-latest
            python-version: "3.10"
    name: Check Python ${{ matrix.python-version }} ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: python -m pip install -e .[test]

      - name: Test package
        run: python -m pytest --doctest-modules --cov=hepstats --cov-report=xml

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build
        run: pipx run build

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*

      - name: Check metadata
        run: pipx run twine check dist/*

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          pip install -U -q -e .[docs]
          pip list
      - name: build docs
        run: |
          sphinx-build -b html docs docs/_build/html
          touch docs/_build/html/.nojekyll

      - name: Deploy docs to GitHub Pages
        if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: Deploy to GitHub pages

  publish:
    needs: [ dist ]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          password: ${{ secrets.pypi_password }}
